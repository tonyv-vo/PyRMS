"""initial

Revision ID: db6e8aeadec5
Revises: 
Create Date: 2021-12-18 04:38:48.284210

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'db6e8aeadec5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('permission_Type', sa.Integer(), nullable=True),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('account_id'),
    sa.UniqueConstraint('phone')
    )
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_account_email'), ['email'], unique=True)

    op.create_table('delivery__car',
    sa.Column('license_plate', sa.String(length=10), nullable=False),
    sa.Column('mileage', sa.Integer(), nullable=True),
    sa.Column('car_colour', sa.String(length=10), nullable=True),
    sa.Column('car_model', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('license_plate')
    )
    op.create_table('restaurant',
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('opening_hours', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=150), nullable=True),
    sa.Column('delivery_range', sa.Integer(), nullable=True),
    sa.Column('location_name', sa.String(length=150), nullable=True),
    sa.PrimaryKeyConstraint('store_id')
    )
    op.create_table('customer',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['account.account_id'], ),
    sa.PrimaryKeyConstraint('customer_id')
    )
    op.create_table('employee',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('wage', sa.Float(), nullable=True),
    sa.Column('position', sa.String(length=64), nullable=True),
    sa.Column('sin', sa.Integer(), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['account.account_id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['restaurant.store_id'], ),
    sa.PrimaryKeyConstraint('employee_id')
    )
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employee_sin'), ['sin'], unique=True)

    op.create_table('menu',
    sa.Column('menu_name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['restaurant.store_id'], ),
    sa.PrimaryKeyConstraint('menu_name')
    )
    op.create_table('driver',
    sa.Column('drivers_license', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['drivers_license'], ['employee.employee_id'], ),
    sa.PrimaryKeyConstraint('drivers_license')
    )
    op.create_table('manager',
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['employee.employee_id'], ),
    sa.PrimaryKeyConstraint('manager_id')
    )
    op.create_table('review',
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['restaurant.store_id'], ),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_table('order',
    sa.Column('order_number', sa.Integer(), nullable=False),
    sa.Column('transaction_time', sa.DateTime(), nullable=True),
    sa.Column('delivery_time', sa.DateTime(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('drivers_license', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.customer_id'], ),
    sa.ForeignKeyConstraint(['drivers_license'], ['driver.drivers_license'], ),
    sa.PrimaryKeyConstraint('order_number')
    )
    op.create_table('item',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('size', sa.String(length=20), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('order_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['order_number'], ['order.order_number'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('drink_item',
    sa.Column('drink_id', sa.Integer(), nullable=False),
    sa.Column('drink_capacity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['drink_id'], ['item.item_id'], ),
    sa.PrimaryKeyConstraint('drink_id')
    )
    op.create_table('food_item',
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('allergens', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['item.item_id'], ),
    sa.PrimaryKeyConstraint('food_id')
    )
    op.create_table('ingredient_component',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.item_id'], ),
    sa.PrimaryKeyConstraint('name')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ingredient_component')
    op.drop_table('food_item')
    op.drop_table('drink_item')
    op.drop_table('item')
    op.drop_table('order')
    op.drop_table('review')
    op.drop_table('manager')
    op.drop_table('driver')
    op.drop_table('menu')
    with op.batch_alter_table('employee', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employee_sin'))

    op.drop_table('employee')
    op.drop_table('customer')
    op.drop_table('restaurant')
    op.drop_table('delivery__car')
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_account_email'))

    op.drop_table('account')
    # ### end Alembic commands ###
